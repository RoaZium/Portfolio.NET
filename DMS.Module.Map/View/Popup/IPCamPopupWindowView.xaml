<Window x:Class="DynamicMonitoring.View.IPCamPopupWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:DynamicMonitoring.View"
        xmlns:cameraEnum="clr-namespace:Coever.Lib.Axis.Core;assembly=Coever.Lib.Axis.Core"
        xmlns:views="clr-namespace:DMS.Module.Map.View"
        xmlns:res="clr-namespace:DMS.Module.Map.Properties"
        WindowStartupLocation="CenterOwner"
        mc:Ignorable="d"
        Loaded="Window_Loaded" Unloaded="Window_Unloaded"
        Topmost="True"
        IsVisibleChanged="OnIsVisibleChanged"
        MinHeight="250" MinWidth="200"
        MaxHeight="600" MaxWidth="800"
        Height="500" Width="500"
        Style="{StaticResource xCustomWindow}"
        Title="{Binding Title}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="SizeChanged">
            <prism:InvokeCommandAction Command="{Binding WindowSizeChangedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="LocationChanged">
            <prism:InvokeCommandAction Command="{Binding WindowLocationChangedCommand}" 
                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DMS.Module.Map;component/Global.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Border Background="#FF191919" CornerRadius="3">
        <Grid Style="{StaticResource sWindowHeaderGrid}">
            <Grid.RowDefinitions>
                <RowDefinition Height="28" />
                <RowDefinition Height="1" />
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock 
                    Grid.Column="1"
                    Style="{StaticResource FontSize20TextBlock}" 
                    Foreground="White"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding Title}">
                </TextBlock>

                <Button Grid.Column="2" 
                        HorizontalAlignment="Right"
                        Style="{StaticResource WindowBaseButton}"
                        Click="ButtonClose_Click">
                    <Button.Content>
                        <Image Source="{StaticResource bla_ic_closeDrawingImage}"/>
                    </Button.Content>
                </Button>
            </Grid>

            <Grid Grid.Row="2" Style="{StaticResource sBaseGrid}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="76" />
                    <ColumnDefinition Width="8" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="8" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="8" />
                </Grid.RowDefinitions>

                <ComboBox Grid.Column="1" Grid.Row="1"
                          Style="{StaticResource xBasicComboBox}"
                          ItemsSource="{Binding IPCamInfo.Areas}"
                          DisplayMemberPath="Name"
                          Visibility="{Binding ElementName=xPTZCamCheckBox, Path=IsChecked, Converter={StaticResource xBooleanToCollapsedConverter}, ConverterParameter=1}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding AreaSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <TextBlock Grid.Column="1" Grid.Row="1"
                       Style="{StaticResource FontSize12TextBlock}"
                       VerticalAlignment="Center"
                       IsHitTestVisible="False"
                       Text="{x:Static res:Res.StrSelectArea}">

                </TextBlock>

                <CheckBox Grid.Column="3" Grid.Row="1"
                          Content="Overview">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="Foreground" Value="{StaticResource SolidColorBrush_Font}" />
                            <Setter Property="IsChecked" Value="{Binding IPCamViewModel.IsShowOverview, FallbackValue=False}" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IPCamViewModel.CameraType}" 
                                         Value="{x:Static cameraEnum:CameraTypes.PANO_360}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>

                <CheckBox Grid.Column="3" Grid.Row="1"
                          x:Name="xPTZCamCheckBox"
                          Content="{x:Static res:Res.StrUnlockControl}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="Foreground" Value="{StaticResource SolidColorBrush_Font}" />
                            <Setter Property="IsChecked" Value="{Binding IPCamViewModel.IsActivateControl, FallbackValue=False}" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IPCamViewModel.CameraType}"
                                             Value="{x:Static cameraEnum:CameraTypes.PTZ}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
            </Grid>

            <views:IPCamView Grid.Row="3" DataContext="{Binding IPCamViewModel}" Margin="4"/>
        </Grid>
    </Border>

</Window>
