<UserControl x:Class="DMS.Module.Map.View.Asset_ListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:res="clr-namespace:DMS.Module.Map.Properties"
             xmlns:local="clr-namespace:DMS.Module.Map.View"
             xmlns:Converters="clr-namespace:PrismWPF.Common.Converter;assembly=PrismWPF.Common"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:mvvm="clr-namespace:PrismWPF.Common.MVVM;assembly=PrismWPF.Common"
             Loaded="UserControl_Loaded" Unloaded="UserControl_Unloaded"
             mc:Ignorable="d" 
             x:Name="root" >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DMS.Module.Map;component/Global.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Converters:SingleChainConverter x:Key="IsFolderConverter">
                <Converters:SingleIsEqureConverter CheckValue="0"/>
                <BooleanToVisibilityConverter/>
            </Converters:SingleChainConverter>

            <mvvm:Triggers x:Key="TreeViewEvent" x:Shared="False">
                <i:EventTrigger EventName="StartRecordDrag">
                    <prism:InvokeCommandAction Command="{Binding TreeStartRecordDragCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="DropRecord">
                    <prism:InvokeCommandAction Command="{Binding TreeDropRecordCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="NodeChanged">
                    <prism:InvokeCommandAction Command="{Binding TreeNodeChangedCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="RowDoubleClick">
                    <prism:InvokeCommandAction Command="{Binding TreeRowDoubleClickedCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="KeyDown">
                    <prism:InvokeCommandAction Command="{Binding TreeViewKeyDownCommand}"/>
                </i:EventTrigger>
            </mvvm:Triggers>

            <ContextMenu x:Key="TreeMainContextMenu" 
                         DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="{x:Static res:Res.StrNewScreen}" 
                          Command="{Binding Tag.CreateMainLayoutCommand}" >

                </MenuItem>

            </ContextMenu>

            <ContextMenu x:Key="TreeRowContextMenu"
                         DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                <!--<MenuItem Header="{x:Static res:Res.StrNewLayout}"
                          Command="{Binding Tag.CreateLayoutCommand}"
                          CommandParameter="{Binding DataContext}" >
                </MenuItem>-->

                <MenuItem Header="{x:Static res:Res.StrModify}"
                          Command="{Binding Tag.ModifyLayoutCommand}" 
                          CommandParameter="{Binding DataContext}" >

                </MenuItem>

                <MenuItem Header="{x:Static res:Res.StrRemove}"
                          Command="{Binding Tag.RemoveLayoutCommand}" 
                          CommandParameter="{Binding DataContext}" >

                </MenuItem>
            </ContextMenu>

            <DataTemplate x:Key="ListBoxItemTemplate">
                <Grid Height="25" Width="Auto">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="24"/>
                        <ColumnDefinition Width="2"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="2"/>
                        <RowDefinition/>
                        <RowDefinition Height="2"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="1" Grid.Row="1"
                               Style="{StaticResource FontSize12TextBlock}"
                               Text="{Binding RoutingName}"/>

                    <Button Grid.Column="3" Grid.Row="1"
                            Style="{StaticResource RoundCancleButton}"
                            Content="X"
                            Foreground="Red"
                            Command="{Binding Path=DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                            CommandParameter="{Binding}"/>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <dxg:TreeListControl ItemsSource="{Binding LayoutList}"
                             SelectedItem="{Binding SelectedItemLayoutList}"
                             ContextMenu="{StaticResource TreeMainContextMenu}" 
                             Tag="{Binding DataContext, ElementName=root}">
            <dxg:TreeListControl.Style>
                <Style TargetType="{x:Type dxg:TreeListControl}">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=xToggleScenarioMode, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=xToggleScenarioMode, Path=IsChecked}" Value="False">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </dxg:TreeListControl.Style>
            <dxg:TreeListColumn FieldName="RoutingName" 
                                Header="{x:Static res:Res.StrConfigurationItem}"
                                Width="400">
                <dxg:TreeListColumn.CellTemplate>
                    <DataTemplate>
                        <local:EditableNavigationItem ContextMenu="{StaticResource TreeRowContextMenu}" 
                                                         Background="Transparent"
                                                         Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxg:TreeListControl}}}" 
                                                         DataContext="{Binding RowData.Row}" 
                                                         IsEditMode="{Binding IsEditMode, Mode=TwoWay}" 
                                                         Caption="{Binding RoutingName, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.ModifiedMapCommand, RelativeSource={RelativeSource AncestorType={x:Type dxg:TreeListControl}}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </local:EditableNavigationItem>
                    </DataTemplate>
                </dxg:TreeListColumn.CellTemplate>
            </dxg:TreeListColumn>
            <dxg:TreeListControl.View>
                <dxg:TreeListView KeyFieldName="RoutingCode" 
                                  ParentFieldName="PRoutingCode"
                                  ShowColumnHeaders="False" 
                                  AutoWidth="False" 
                                  NavigationStyle="Row"
                                  ShowHorizontalLines="True" 
                                  ShowVerticalLines="False" 
                                  AllowPerPixelScrolling="True" 
                                  ShowIndicator="False"
                                  AutoExpandAllNodes="True"
                                  AllowPrintColumnHeaderImage="True"
                                  AllowDragDrop="True"
                                  HorizontalScrollbarVisibility="Auto"
                                  VerticalScrollbarVisibility="Auto"
                                  mvvm:SupplementaryInteraction.Triggers="{StaticResource TreeViewEvent}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="RowDoubleClick">
                            <i:InvokeCommandAction Command="{Binding RowDoubleClickCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </dxg:TreeListView>

            </dxg:TreeListControl.View>
        </dxg:TreeListControl>
    </Grid>

</UserControl>
